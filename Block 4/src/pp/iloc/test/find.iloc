start:	in 	    "Input: "	=> r_x 		// x = in();
		loadI	0 			=> r_i 		// int i = 0;
		loadI 	@alength 	=> r_len
for:	cmp_LT 	r_i, r_len 	=> r_cmp 	// i < a.length;
		cbr 	r_cmp 		-> body, end
body:	i2i 	r_i 		=> r_a 		// compute address of a[i]
		multI 	r_a,4 		=> r_a 		// multiply by size of int
		addI 	r_a,@a 		=> r_a 		// add aâ€™s base offset
		loadAO 	r_arp,r_a 	=> r_ai 	// r_ai <- a[i]
		cmp_EQ 	r_ai, r_x 	=> r_cmp 	// a[i] == x
		cbr 	r_cmp 		-> end, inc
inc:	addI 	r_i, 1 		=> r_i 		// i = i+1;
		jumpI 				-> for
end:	out 	"Index: ", r_i 			// printf("Index: %d%n", i);
		